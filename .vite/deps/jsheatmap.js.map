{
  "version": 3,
  "sources": ["../../node_modules/jsheatmap/lib/fancy.js", "../../node_modules/jsheatmap/lib/simple.js", "../../node_modules/jsheatmap/lib/index.js"],
  "sourcesContent": ["class ColorPoint {\n    constructor(red, green, blue, value) {\n        this.r = red;\n        this.g = green;\n        this.b = blue;\n        this.val = value;\n    }\n}\nclass ColorGradient {\n    constructor() {\n        this.color = [];\n        this.createDefaultHeatMapGradient();\n    }\n    addColorPoint(red, green, blue, value) {\n        for (let i = 0; i < this.color.length; i++) {\n            if (value < this.color[i].val) {\n                this.color.splice(i, 0, new ColorPoint(red, green, blue, value));\n                return;\n            }\n        }\n        this.color.push(new ColorPoint(red, green, blue, value));\n    }\n    createDefaultHeatMapGradient() {\n        this.color = [];\n        this.color.push(new ColorPoint(0, 0, 1, 0.0)); // Blue.\n        this.color.push(new ColorPoint(0, 1, 1, 0.34)); // Cyan.\n        this.color.push(new ColorPoint(0, 1, 0, 0.5)); // Green.\n        this.color.push(new ColorPoint(1, 1, 0, 0.66)); // Yellow.\n        this.color.push(new ColorPoint(1, 0, 0, 1.0)); // Red.\n    }\n    //-- Inputs a (value) between 0 and 1 and outputs the (red), (green) and (blue)\n    //-- values representing that position in the gradient.\n    getColorAtValue(value) {\n        let red, green, blue;\n        red = green = blue = 0;\n        if (this.color.length === 0)\n            return { red, green, blue };\n        for (let i = 0; i < this.color.length; i++) {\n            let currC = this.color[i];\n            if (value < currC.val) {\n                let prevC = this.color[Math.max(0, i - 1)];\n                let valueDiff = (prevC.val - currC.val);\n                let fractBetween = (valueDiff == 0) ? 0 : (value - currC.val) / valueDiff;\n                red = (prevC.r - currC.r) * fractBetween + currC.r;\n                green = (prevC.g - currC.g) * fractBetween + currC.g;\n                blue = (prevC.b - currC.b) * fractBetween + currC.b;\n                return { red, green, blue };\n            }\n        }\n        red = this.color.slice(-1)[0].r;\n        green = this.color.slice(-1)[0].g;\n        blue = this.color.slice(-1)[0].b;\n        return { red, green, blue };\n    }\n}\n;\nexport default ColorGradient;\n", "function getHeatMapColor(value) {\n    const NUM_COLORS = 4;\n    const color = [[0, 0, 1], [0, 1, 0], [1, 1, 0], [1, 0, 0]];\n    let idx1 = 0, idx2 = 0;\n    let fractBetween = 0;\n    if (value <= 0) {\n        idx1 = idx2 = 0;\n    }\n    else if (value >= 1) {\n        idx1 = idx2 = NUM_COLORS - 1;\n    }\n    else {\n        const v = value * (NUM_COLORS - 1);\n        idx1 = Math.floor(v);\n        idx2 = idx1 + 1;\n        fractBetween = v - idx1;\n    }\n    const rgb = {\n        red: (color[idx2][0] - color[idx1][0]) * fractBetween + color[idx1][0],\n        green: (color[idx2][1] - color[idx1][1]) * fractBetween + color[idx1][1],\n        blue: (color[idx2][2] - color[idx1][2]) * fractBetween + color[idx1][2]\n    };\n    return rgb;\n}\nexport default getHeatMapColor;\n", "import ColorGradient from './fancy.js';\nimport getHeatMapColor from './simple.js';\nvar Style;\n(function (Style) {\n    Style[Style[\"SIMPLE\"] = 0] = \"SIMPLE\";\n    Style[Style[\"FANCY\"] = 1] = \"FANCY\";\n})(Style || (Style = {}));\nclass Sterno {\n    constructor(headings, rows) {\n        this.headings = headings;\n        this.rows = rows;\n    }\n    getData(options) {\n        const { headings } = this;\n        let high = 0;\n        let low = Number.MAX_SAFE_INTEGER;\n        const rows = this.rows.map(r => {\n            const [label, values, extra] = r;\n            high = Math.max(...values, high);\n            low = Math.min(...values, low);\n            if (low < 0)\n                throw Error(\"negative input encountered\");\n            return { label, cells: { values, colors: [], scales: [], extra } };\n        });\n        const heatMapGradient = new ColorGradient(); // Used to create a nice array of different colors.\n        heatMapGradient.createDefaultHeatMapGradient();\n        const adjust = (v) => {\n            if (options && options.logn) {\n                return Math.log(v);\n            }\n            return v;\n        };\n        rows.forEach(row => {\n            row.cells.values.forEach((value, i) => {\n                let scale = adjust(value - low) / adjust(high - low);\n                if (options && options.style === Style.SIMPLE) {\n                    var color = getHeatMapColor(scale);\n                }\n                else {\n                    var color = heatMapGradient.getColorAtValue(scale);\n                }\n                row.cells.colors[i] = color;\n                row.cells.scales[i] = scale;\n            });\n        });\n        return { headings, high, low, rows };\n    }\n}\nexport { Style, Sterno as default };\n"],
  "mappings": "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",
  "names": ["Style"]
}
